library(ggplot2)
# create scatterplot on testing data and color (or shape) brand preference
ggplot(data = CompleteResponses) +
geom_point(aes(x = age, y = salary, color = brand))
ggplot(data = CompleteResponses) +
geom_point(aes(x = elevel, y = salary, color = brand))
ggplot(data = CompleteResponses) +
geom_point(aes(x = elevel, y = car, color = brand))
ggplot(data = CompleteResponses) +
geom_point(aes(x = car, y = salary, color = brand))
ggplot(data = CompleteResponses) +
geom_point(aes(x = car, y = age, color = brand))
ggplot(data = CompleteResponses) +
geom_point(aes(x = zipcode, y = salary, color = brand))
ggplot(data = CompleteResponses) +
geom_point(aes(x = elevel, y = age, color = brand))
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Preprocessing_Acer_Sony_Else_Version1.R', echo=TRUE)
rfFit
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Training_Random Forest_Acer_Sony_Else_Version2manual.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Predictions_Acer_Sony_Else_Version2.RandomForest.R', echo=TRUE)
ggplot(data = CompleteResponses) +
geom_point(aes(x = credit, y = salary, color = brand))
confusionMatrix(predictiontest, testing$brand)
confusionMatrix(testing$Prediction, testing$brand)
View(testing)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Predictions_Acer_Sony_Else_Version2.RandomForest.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Training_Random Forest_Acer_Sony_Else_Version2manual.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Preprocessing_Acer_Sony_Else_Version1.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Training_Random Forest_Acer_Sony_Else_Version2manual.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Predictions_Acer_Sony_Else_Version2.RandomForest.R', echo=TRUE)
#see variable importance
varImp(rfFit,
scale = FALSE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Preprocessing_Acer_Sony_Else_Version1.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Training_Model_Acer_Sony_Else_Version1.R', echo=TRUE)
debugSource('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Predictions_Acer_Sony_Else_Version1.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Preprocessing_Acer_Sony_Else_Version1.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Predictions_Acer_Sony_Else_Version1.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Training_Model_Acer_Sony_Else_Version1.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Predictions_Acer_Sony_Else_Version1.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Training_Random Forest_Acer_Sony_Else_Version2manual.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Predictions_Acer_Sony_Else_Version2.RandomForest.R', echo=TRUE)
IncompleteResponses <- read.csv("SurveyIncomple.csv")
IncompleteResponses <- read_csv("SurveyIncomple.csv")
source('~/.active-rstudio-document', echo=TRUE)
View(SurveyIncomplete)
#read summary
summary(SurveyIncomplete)
#view scatterplot with ggplot
ggplot(data = SurveyIncomplete) +
geom_point(aes(x = age, y = salary))
#view scatterplot with ggplot
ggplot(data = SurveyIncomplete) +
geom_point(aes(x = age, y = salary, color = zipcode))
#view scatterplot with ggplot
ggplot(data = SurveyIncomplete) +
geom_point(aes(x = age, y = salary, color = car))
#view scatterplot with ggplot
ggplot(data = SurveyIncomplete) +
geom_point(aes(x = age, y = salary, color = elevel))
ggplot(data = SurveyIncomplete) +
+   geom_point(aes(x = age, y = salary, color = elevel))
ggplot(data = SurveyIncomplete) +
geom_point(aes(x = zipcode, y = salary, color = elevel))
geom_point(aes(x = zipcode, y = elevel)
predict(brand, newdata = SurveyIncomplete)
#read summary, histograms and scatterplot to investigate data
predict(C50Fit, newdata = SurveyIncomplete)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/IncompleteSurvey_Exploration_Acer_Sony_Else_Version1.R', echo=TRUE)
#make a new column with predicted values
SurveyIncomplete$PredictedBrand <- predict(C50Fit, newdata = SurveyIncomplete)
summary(SurveyIncomplete)
summary(CompleteResponses)
ggplot(data = testing) +
geom_point(aes(x = age, y = salary, color = brand))
ggplot(data = SurveyIncomplete) +
geom_point(aes(x = age, y = salary, color = brand))
ggplot(data = SurveyIncomplete) +
geom_point(aes(x = age, y = salary, color = PredictedBrand))
ggplot(data = SurveyIncomplete) +
geom_point(aes(x = age, y = salary, color = PredictedBrand)) + ggplot(data = CompleteResponses) +
geom_point(aes(x = age, y = salary, color = brand))
#investigate patterns of brand preference in scatterplot
#compare with CompleteResponses dataset
ggplot(data = SurveyIncomplete) +
geom_point(aes(x = credit, y = salary, color = PredictedBrand))
#make predictions with Random Forest model
predict(rfFit, newdata = SurveyIncomplete)
#make a new column with predicted values
SurveyIncomplete$PredictedBrand <- predict(C50Fit, newdata = SurveyIncomplete)
#make a new column with predicted values
SurveyIncomplete$PredictedBrandRF <- predict(rfFit, newdata = SurveyIncomplete)
#how many did they predict differently?
SurveyIncomplete$DifferentPrediction <- SurveyIncomplete$PredictedBrand - SurveyIncomplete$PredictedBrandRF
#how many did they predict differently?
#make predicted values integers
SurveyIncomplete$PredictedBrand <- as.integer(SurveyIncomplete$PredictedBrand)
SurveyIncomplete$PredictedBrandRF <- as.integer(SurveyIncomplete$PredictedBrandRF)
SurveyIncomplete$DifferentPrediction <- SurveyIncomplete$PredictedBrand - SurveyIncomplete$PredictedBrandRF
str(SurveyIncomplete$DifferentPrediction)
summary(SurveyIncomplete$DifferentPrediction)
plot(DifferentPrediction)
plot(SurveyIncomplete$DifferentPrediction)
#read the summary
summary(SurveyIncomplete)
source('~/.active-rstudio-document', echo=TRUE)
#make ggplot
ggplot(data = SurveyIncomplete) +
geom_point(aes(x = PredictedBrand, y = PredictedBrandRF, color = brand))
#make ggplot
ggplot(data = SurveyIncomplete) +
geom_point(aes(x = age, y = salary, color = DifferentPrediction))
#make ggplot
ggplot(data = SurveyIncomplete) +
geom_point(aes(x = age, y = salary, color = PredictedBrandRF))
source('~/.active-rstudio-document', echo=TRUE)
summary(DifferentPrediction)
#make a frequency table
w = table(SurveyIncomplete$DifferentPrediction)
w
#make a frequency table
count <- table(SurveyIncomplete$DifferentPrediction)
count
t <- as.data.frame(w)
t
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/IncompleteSurvey_Exploration_Acer_Sony_Else_Version1.R', echo=TRUE)
#make predictions with Random Forest model
predict(rfFit, newdata = SurveyIncomplete)
#make a new column with predicted values
SurveyIncomplete$PredictedBrandRF <- predict(rfFit, newdata = SurveyIncomplete)
#read the summary
summary(SurveyIncomplete)
ggplot(data = SurveyIncomplete) +
geom_point(aes(x = credit, y = salary, color = PredictedBrandRF))
ggplot(data = SurveyIncomplete) +
geom_point(aes(x = age, y = salary, color = PredictedBrandRF))
View(CompleteResponses)
View(SurveyIncomplete)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/IncompleteSurvey_PredictionRF_and_Comparison_Acer_Sony_Else_Version1.R', echo=TRUE)
View(SurveyIncomplete)
SurveyIncomplete$brand <- SurveyIncomplete$PredictedBrandRF
SurveyIncomplete$brand <- SurveyIncomplete$PredictedBrandRF
View(SurveyIncomplete)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/IncompleteSurvey_PredictionRF_and_Comparison_Acer_Sony_Else_Version1.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/IncompleteSurvey_PredictionRF_and_Comparison_Acer_Sony_Else_Version1.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Preprocessing_Acer_Sony_Else_Version1.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Training_Random Forest_Acer_Sony_Else_Version2manual.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
#make a new column with predicted values
SurveyIncomplete$PredictedBrand <- predict(rfFit, newdata = SurveyIncomplete)
source('~/.active-rstudio-document', echo=TRUE)
SurveyIncomplete$PredictedBrand <- predict(rfFit, newdata = SurveyIncomplete)
#make a new column with predicted values
#change attribute elevel into ordinal data
SurveyIncomplete$elevel <- as.integer(SurveyIncomplete$elevel)
SurveyIncomplete$PredictedBrand <- predict(rfFit, newdata = SurveyIncomplete)
#make a new column with predicted values
#change attribute elevel into ordinal data
SurveyIncomplete$elevel <- as.factor(SurveyIncomplete$elevel)
SurveyIncomplete$PredictedBrand <- predict(rfFit, newdata = SurveyIncomplete)
#change brand column into PredictedBrand comlumn
SurveyIncomplete$brand <- SurveyIncomplete$PredictedBrand
View(SurveyIncomplete)
#Merge datasets into one
MergedResponses <- merge(CompleteResponses, SurveyIncomplete,
by= "salary","age","elevel","car","zipcode", "credit","brand")
#Merge datasets into one
MergedResponses <- merge(CompleteResponses, SurveyIncomplete)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
#make a new column with predicted values
#change attribute elevel into ordinal data
SurveyIncomplete$elevel <- as.factor(SurveyIncomplete$elevel)
SurveyIncomplete$PredictedBrand <- predict(rfFit, newdata = SurveyIncomplete)
View(SurveyIncomplete)
SurveyIncomplete$brand <- SurveyIncomplete$PredictedBrand
View(SurveyIncomplete)
MergedResponses <- merge(CompleteResponses, SurveyIncomplete, by = c('key') )
write.xlsx(SurveyIncomplete, "SurveyPredicted.xlsx")
write.csv(SurveyIncomplete, "SurveyPredicted.xlsx")
library(xlsx)
install.packages(xlsx)
install.packages(xlsx)
library(xlsx)
write.csv(SurveyIncomplete, "SurveyPredicted.csv")
#import dataset CompleteRespones
CompleteResponses <- read_csv("CompleteResponses.csv")
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Preprocessing_Acer_Sony_Else_Version1.R', echo=TRUE)
ggplot(CompleteResponses, aes(x=age, fill = brand)) +
theme_bw() +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by Age")
ggplot(CompleteResponses, aes(x=salary, fill = brand)) +
theme_bw() +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by Age")
#plot Customer Brand Preference by zipcode
ggplot(CompleteResponses, aes(x=zipcode, fill = brand)) +
theme_bw() +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by Zipcode")
#plot Customer Brand Preference by car
ggplot(CompleteResponses, aes(x=car, fill = brand)) +
theme_bw() +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by Car")
#plot Customer Brand Preference by elevel
ggplot(CompleteResponses, aes(x=zipcode, fill = brand)) +
theme_bw() +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by Education")
#plot Customer Brand Preference by elevel
ggplot(CompleteResponses, aes(x=elevel, fill = brand)) +
theme_bw() +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by Education")
#plot Customer Brand Preference by zipcode and elevel
ggplot(CompleteResponses, aes(x = zipcode, fill = brand)) +
theme_dark() +
facet_wrap(~elevel) +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by Education")
#plot Customer Brand Preference by zipcode and elevel
ggplot(CompleteResponses, aes(x = zipcode, fill = brand)) +
theme_light() +
facet_wrap(~elevel) +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by Education")
#plot Customer Brand Preference by zipcode and elevel
ggplot(CompleteResponses, aes(x = age, fill = brand)) +
theme_light() +
facet_wrap(~elevel) +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by Education")
#plot Customer Brand Preference by zipcode and elevel
ggplot(CompleteResponses, aes(x = salary, fill = brand)) +
theme_light() +
facet_wrap(~elevel) +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by Education")
#plot Customer Brand Preference by zipcode and elevel
ggplot(CompleteResponses, aes(x = credit, fill = brand)) +
theme_light() +
facet_wrap(~elevel) +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by Education")
#plot Customer Brand Preference by zipcode and elevel
ggplot(CompleteResponses, aes(x = car, fill = brand)) +
theme_bw() +
facet_wrap(~elevel) +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by Education")
#plot Customer Brand Preference by age and zipcode
ggplot(CompleteResponses, aes(x = age, fill = brand)) +
theme_bw() +
facet_wrap(~zipcode) +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by Education")
#plot Customer Brand Preference by age and zipcode
ggplot(CompleteResponses, aes(x = age, fill = brand)) +
theme_bw() +
facet_wrap(~zipcode) +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by Age and Region")
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Preprocessing_Acer_Sony_Else_Version1.R', echo=TRUE)
#
ggplot(CompleteResponses, aes(x = age, fill = brand)) +
theme_bw() +
geom_histogram(binwidth = 10) +
labs(y = "Customer Count",
x = "Age (binwidth = 5",
title = "Distribution of Customer Age and Brand Preference")
#plot histogram based on age, bin = 10, and brand preference
ggplot(CompleteResponses, aes(x = age, fill = brand)) +
theme_bw() +
geom_histogram(binwidth = 10) +
labs(y = "Customer Count",
x = "Age (binwidth = 10",
title = "Distribution of Customer Age and Brand Preference")
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Preprocessing_Acer_Sony_Else_Version1.R', echo=TRUE)
#plot histogram based on age, bin = 5, and brand preference
ggplot(CompleteResponses, aes(x = age, fill = brand)) +
theme_bw() +
geom_histogram(binwidth = 5) +
labs(y = "Customer Count",
x = "Age (binwidth = 5",
title = "Distribution of Customer Age and Brand Preference")
#plot Customer Brand Preference by zipcode
ggplot(CompleteResponses, aes(x=brand, fill = age)) +
theme_bw() +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by ")
#plot Customer Brand Preference by zipcode
ggplot(CompleteResponses, aes(x=brand, fill = brand)) +
theme_bw() +
geom_bar() +
labs(y = "Customer Count",
title = "Customer Preference by ")
#plot Customer Brand Preference by zipcode
ggplot(CompleteResponses, aes(x=brand, fill = brand)) +
theme_bw() +
geom_bar() +
labs(y = "Customer Count",
x = "0 = Acer, 1 = Sony"
title = "Customer Preference of Brands ")
#plot Customer Brand Preference by zipcode
ggplot(CompleteResponses, aes(x=brand, fill = brand)) +
theme_bw() +
geom_bar() +
labs(y = "Customer Count",
x = "0 = Acer, 1 = Sony"
title = "Customer Preference of Brands ")
#plot Customer Brand Preference by zipcode
ggplot(CompleteResponses, aes(x=brand, fill = brand)) +
theme_bw() +
geom_bar() +
labs(y = "Customer Count",
x = "0 = Acer, 1 = Sony",
title = "Customer Preference of Brands ")
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Training_Random Forest_Acer_Sony_Else_Version2manual.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Predictions_Acer_Sony_Else_Version2.RandomForest.R', echo=TRUE)
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/Predictions_Acer_Sony_Else_Version2.RandomForest.R', echo=TRUE)
#make scatterpot to look at the errors of prediction on test data
ggplot(testing) + geom_point(aes(x = age,
y = salary,
color = (errors != 0)))
source('~/Google Drive/BSSA - data analytics/Module 2/Task 2/Acer and Sony/IncompleteSurvey_Exploration_Acer_Sony_Else_Version1.R', echo=TRUE)
#import dataset SurveyIncomplete
SurveyIncomplete <- read_csv("SurveyIncomplete.csv")
#view table
View(SurveyIncomplete)
#change attributes into same kind of value as CompleteRespone data:
#import dataset CompleteRespones
#preprocess brand into factor
SurveyIncomplete$brand <- as.factor(SurveyIncomplete$brand)
#preprocess car and zipcode into integers
SurveyIncomplete$car <- as.integer(SurveyIncomplete$car)
SurveyIncomplete$zipcode <- as.integer(SurveyIncomplete$zipcode)
#change attribute elevel into ordinal data
SurveyIncomplete$elevel <- as.ordered(SurveyIncomplete$elevel)
#make predictions with model
predict(rfFit, newdata = SurveyIncomplete)
#make a new column with predicted values
SurveyIncomplete$PredictedBrand <- predict(rfFit, newdata = SurveyIncomplete)
View(SurveyIncomplete)
#if necessary replace brand column with predicted colum
SurveyIncomplete$brand <- SurveyIncomplete$PredictedBrand
#write csv file so we can make 1 merged file
write.csv(SurveyIncomplete, "SurveyPredicted.csv")
#import dataset SurveyIncomplete
CompleteData <- read_csv("CompleteSurvey_includingPredictions.csv")
#import dataset SurveyIncomplete
read_csv("CompleteSurvey_includingPredictions.csv")
View(CompleteData)
#import dataset SurveyIncomplete
read_csv("CompleteSurvey_includingPredictions.csv")
read_csv("CompleteSurvey_includingPredictions2.csv")
TestingCSV <- read_csv("CompleteSurvey_includingPredictions2.csv")
merge.data.frame(SurveyIncomplete, CompleteResponses)
TESTMERGE <- merge.data.frame(SurveyIncomplete, CompleteResponses)
TESTMERGE <- merge.data.frame(SurveyIncomplete, CompleteResponses,
c("salary",
"age",
"elevel",
"car",
"zipcode",
"credit",
"brand"))
TESTMERGE2 <- merge(SurveyIncomplete, CompleteResponses)
#merge by row
TESTMERGE3 <- rbind(CompleteResponses,SurveyIncomplete)
View(SurveyIncomplete)
#merge by row
TESTMERGE3 <- rbind(CompleteResponses,SurveyIncomplete)
#remove Predicted Brand column
SurveyIncomplete$PredictedBrand <- NULL
View(SurveyIncomplete)
#merge by row
TESTMERGE3 <- rbind(CompleteResponses,SurveyIncomplete)
#merge CompleteResponses and SurveyIncomplete by row
MergedData <- rbind(CompleteResponses,SurveyIncomplete)
#write csv file so we can make 1 merged file
write.csv(MergedData, "Merged_CompleteResponses_and_Predictions.csv")
#make a new column with predicted values
#if necessary replace brand column with predicted colum
SurveyIncomplete$brand <-
SurveyIncomplete$PredictedBrand - SurveyIncomplete$PredictedBrand <-
predict(rfFit, newdata = SurveyIncomplete)
#make a new column with predicted values
#if necessary replace brand column with predicted colum
SurveyIncomplete$brand <-
SurveyIncomplete$PredictedBrand SurveyIncomplete$PredictedBrand <-
predict(rfFit, newdata = SurveyIncomplete)
#plot Customer Brand Preference
ggplot(MergedData, aes(x=brand, fill = brand)) +
theme_bw() +
geom_bar() +
labs(y = "Customer Count",
x = "0 = Acer, 1 = Sony",
title = "Customer Preference of Brands ")
#plot Customer Brand Preference
ggplot(MergedData, aes(x=brand, fill = brand)) +
theme_bw() +
geom_bar() +
labs(y = "Customer Count",
x = "0 = Acer, 1 = Sony",
title = "Customer Preference of Computer Brands ")
ggplot(MergedData, aes(x=brand, fill = brand)) +
theme_bw() +
geom_point() +
labs(y = "Customer Count",
x = "0 = Acer, 1 = Sony",
title = "Customer Preference of Computer Brands ")
ggplot(MergedData, aes(x=age, y= salary, fill = brand)) +
theme_bw() +
geom_point() +
labs(y = "Customer Count",
x = "0 = Acer, 1 = Sony",
title = "Customer Preference of Computer Brands ")
ggplot(MergedData, aes(x=age, y= salary, color = brand)) +
theme_bw() +
geom_point() +
labs(y = "Customer Count",
x = "0 = Acer, 1 = Sony",
title = "Customer Preference of Computer Brands ")
ggplot(MergedData, aes(x=age, y= salary, color = brand)) +
theme_bw() +
geom_point() +
labs(y = "Salary",
x = "0 = Acer, 1 = Sony",
title = "Customer Preference of Computer Brands ")
ggplot(MergedData, aes(x=age, y= salary, color = brand)) +
theme_bw() +
geom_point() +
labs(y = "Salary",
x = "Age",
title = "Customer Preference of Computer Brands (0 = Acer, 1 = Sony) ")
ggplot(MergedData, aes(x=age, y= salary, color = brand)) +
theme_bw() +
geom_point() +
facet_wrap(~zipcode) +
labs(y = "Salary",
x = "Age",
title = "Customer Preference of Computer Brands (0 = Acer, 1 = Sony) ")
ggplot(MergedData, aes(x=age, y= salary, color = brand)) +
theme_bw() +
geom_point() +
facet_wrap(~zipcode) +
labs(y = "Salary",
x = "Age",
facet_wrap = "zipcode"
title = "Customer Preference of Computer Brands (0 = Acer, 1 = Sony) ")
ggplot(MergedData, aes(x=age, y= salary, color = brand)) +
theme_bw() +
geom_point() +
facet_wrap(~zipcode) +
labs(y = "Salary",
x = "Age",
facet_wrap = "zipcode",
title = "Customer Preference of Computer Brands (0 = Acer, 1 = Sony) ")
ggplot(MergedData, aes(x=age, y= salary, color = brand)) +
theme_bw() +
geom_point() +
facet_wrap(~zipcode, elevel) +
labs(y = "Salary",
x = "Age",
title = "Customer Preference of Computer Brands (0 = Acer, 1 = Sony) ")
ggplot(MergedData, aes(x=age, y= salary, color = brand)) +
theme_bw() +
geom_point() +
facet_wrap(~elevel) +
labs(y = "Salary",
x = "Age",
title = "Customer Preference of Computer Brands (0 = Acer, 1 = Sony) ")
ggplot(MergedData, aes(x=age, y= salary, color = brand)) +
theme_bw() +
geom_point() +
facet_wrap(~elevel) +
labs(y = "Salary",
x = "Age",
title = "Customer Preference of Computer Brands (0 = Acer, 1 = Sony) segmented by education")
#plot Customer Brand Preferences according to age, salary and segment per zipcode
ggplot(MergedData, aes(x=age, y= salary, color = brand)) +
theme_bw() +
geom_point() +
facet_wrap(~zipcode) +
labs(y = "Salary",
x = "Age",
title = "Customer Preference of Computer Brands (0 = Acer, 1 = Sony) segmented by zipcode")
#plot Customer Brand Preferences according to age, salary and segment per car
ggplot(MergedData, aes(x=age, y= salary, color = brand)) +
theme_bw() +
geom_point() +
facet_wrap(~car) +
labs(y = "Salary",
x = "Age",
title = "Customer Preference of Computer Brands (0 = Acer, 1 = Sony) segmented by car")
